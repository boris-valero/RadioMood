-- Création de la table USER
CREATE TABLE USER (
    id_USER INT AUTO_INCREMENT NOT NULL,
    email_USER VARCHAR(64) NOT NULL,
    pseudo_USER VARCHAR(64) NOT NULL,
    created_at_USER DATETIME NOT NULL,
    password_USER VARCHAR(128) NOT NULL,
    PRIMARY KEY (id_USER)
) ENGINE=InnoDB;

-- Création de la table SESSION
CREATE TABLE SESSION (
    id_SESSION INT AUTO_INCREMENT NOT NULL,
    token_SESSION VARCHAR(64) NOT NULL,
    created_at_SESSION DATETIME NOT NULL,
    expires_at_SESSION DATETIME NOT NULL,
    user_agent_SESSION VARCHAR(224),
    user_id INT NOT NULL,
    PRIMARY KEY (id_SESSION),
    FOREIGN KEY (user_id) REFERENCES USER(id_USER) ON DELETE CASCADE
) ENGINE=InnoDB;

-- Création de la table PLAYLIST
CREATE TABLE PLAYLIST (
    id_PLAYLIST INT AUTO_INCREMENT NOT NULL,
    user_id INT NOT NULL,
    name_PLAYLIST VARCHAR(224) NOT NULL,
    created_at_PLAYLIST DATETIME NOT NULL,
    updated_at_PLAYLIST DATETIME,
    is_public_PLAYLIST TINYINT(1) DEFAULT 0,
    PRIMARY KEY (id_PLAYLIST),
    FOREIGN KEY (user_id) REFERENCES USER(id_USER) ON DELETE CASCADE
) ENGINE=InnoDB;

-- Création de la table TRACK
CREATE TABLE TRACK (
    id_TRACK INT AUTO_INCREMENT NOT NULL,
    title_TRACK VARCHAR(224) NOT NULL,
    artist_TRACK VARCHAR(224),
    album_TRACK VARCHAR(512),
    url_TRACK VARCHAR(512),
    cover_TRACK VARCHAR(512),
    PRIMARY KEY (id_TRACK)
) ENGINE=InnoDB;

-- Création de la table MOOD
CREATE TABLE MOOD (
    id_MOOD INT AUTO_INCREMENT NOT NULL,
    name_MOOD VARCHAR(64) NOT NULL,
    description_MOOD VARCHAR(1024),
    PRIMARY KEY (id_MOOD)
) ENGINE=InnoDB;

-- Création de la table WEATHER
CREATE TABLE WEATHER (
    id_WEATHER INT AUTO_INCREMENT NOT NULL,
    type_WEATHER VARCHAR(224),
    temperature_WEATHER INT,
    city_WEATHER VARCHAR(224),
    description_WEATHER VARCHAR(512),
    PRIMARY KEY (id_WEATHER)
) ENGINE=InnoDB;

-- Table de jointure PLAYLIST_TRACK
CREATE TABLE PLAYLIST_TRACK (
    playlist_id INT NOT NULL,
    track_id INT NOT NULL,
    position INT NOT NULL,
    added_at DATETIME NOT NULL,
    PRIMARY KEY (playlist_id, track_id),
    FOREIGN KEY (playlist_id) REFERENCES PLAYLIST(id_PLAYLIST) ON DELETE CASCADE,
    FOREIGN KEY (track_id) REFERENCES TRACK(id_TRACK) ON DELETE CASCADE
) ENGINE=InnoDB;

-- Historique d'écoute LISTENING_HISTORY
CREATE TABLE LISTENING_HISTORY (
    id INT AUTO_INCREMENT NOT NULL,
    user_id INT NOT NULL,
    track_id INT NOT NULL,
    mood_id INT,
    weather_id INT,
    played_at DATETIME NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES USER(id_USER) ON DELETE CASCADE,
    FOREIGN KEY (track_id) REFERENCES TRACK(id_TRACK) ON DELETE CASCADE,
    FOREIGN KEY (mood_id) REFERENCES MOOD(id_MOOD) ON DELETE SET NULL,
    FOREIGN KEY (weather_id) REFERENCES WEATHER(id_WEATHER) ON DELETE SET NULL
) ENGINE=InnoDB;
